name: vod Docker Images

on:
  workflow_dispatch: # 手动触发
  schedule:
    - cron: '0 0 * * *' # 每天 0 点自动触发

env:
  IMAGE_SOURCE: sifan1/vodspider
  IMAGE_TARGET: abansheng/vod
  VERSIONS: v2 v3 v4 latest
  PLATFORMS: linux/amd64 linux/arm64 linux/arm/v7

jobs:
  mirror-image:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出仓库
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: 设置 QEMU 和 Buildx
      - name: Set up QEMU and Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      # Step 3: 登录 DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: 拉取、标记和推送镜像
      - name: Mirror and push images for all versions and platforms
        run: |
          for version in ${{ env.VERSIONS }}; do
            for platform in ${{ env.PLATFORMS }}; do
              tag=${platform//\//_}  # 将平台名称中的斜杠替换为下划线
              echo "Processing version: $version for platform: $platform"
              docker pull --platform $platform ${{ env.IMAGE_SOURCE }}:$version || continue
              docker tag ${{ env.IMAGE_SOURCE }}:$version ${{ env.IMAGE_TARGET }}:$version-$tag
              docker push ${{ env.IMAGE_TARGET }}:$version-$tag
            done
          done

      # Step 5: 创建并推送多架构清单
      - name: Create and push multi-arch manifests
        run: |
          for version in ${{ env.VERSIONS }}; do
            echo "Creating multi-arch manifest for version: $version"
            docker manifest create ${{ env.IMAGE_TARGET }}:$version \
              $(for platform in ${{ env.PLATFORMS }}; do \
                tag=${platform//\//_}; \
                echo "--amend ${{ env.IMAGE_TARGET }}:$version-$tag"; \
              done)
            docker manifest push ${{ env.IMAGE_TARGET }}:$version
          done
